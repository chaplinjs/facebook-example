// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['underscore', 'chaplin', 'models/base/model'], function(_, Chaplin, Model) {
  'use strict';

  var Like;
  return Like = (function(_super) {

    __extends(Like, _super);

    function Like() {
      this.processLike = __bind(this.processLike, this);
      return Like.__super__.constructor.apply(this, arguments);
    }

    Like.prototype.initialize = function(attributes, options) {
      Like.__super__.initialize.apply(this, arguments);
      if (options && options.loadDetails) {
        this.initDeferred();
        return this.fetch();
      }
    };

    Like.prototype.fetch = function() {
      var provider, user;
      user = Chaplin.mediator.user;
      if (!user) {
        return;
      }
      provider = user.get('provider');
      if (provider.name !== 'facebook') {
        return;
      }
      return provider.getInfo(this.id, this.processLike);
    };

    Like.prototype.processLike = function(response) {
      this.set(response);
      return this.resolve();
    };

    return Like;

  })(Model);
});
